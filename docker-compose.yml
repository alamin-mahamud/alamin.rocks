services:
  frontend:
    build: ./frontend
    ports:
      - "${FRONTEND_PORT:-3120}:3000"
    environment:
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL:-http://localhost:8120}
    env_file:
      - .env
    depends_on:
      - backend
    profiles:
      - all

  admin:
    build: ./admin
    ports:
      - "${ADMIN_PORT:-3121}:3000"
    environment:
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL:-http://localhost:8120}
    env_file:
      - .env
    depends_on:
      - backend
    profiles:
      - all

  backend:
    build: ./backend
    ports:
      - "${BACKEND_PORT:-8120}:8000"
    env_file:
      - .env
    depends_on:
      - db
      - redis
    profiles:
      - all
      - backend

  db:
    image: postgres:17-alpine
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-alamin_rocks}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
    ports:
      - "${POSTGRES_PORT:-5452}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    profiles:
      - all
      - backend

  redis:
    image: redis:8-alpine
    ports:
      - "${REDIS_PORT:-6389}:6379"
    volumes:
      - redis_data:/data
    profiles:
      - all
      - backend

volumes:
  postgres_data:
  redis_data:
