services:
  backend:
    build: ./backend
    container_name: alamin-backend
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-password}@db:5432/${POSTGRES_DB:-alamin_rocks}
      - REDIS_URL=redis://redis:6379
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-here-change-in-production}
      - DEBUG=False
      - FRONTEND_URL=https://alamin.rocks
      - ADMIN_URL=https://admin.alamin.rocks
    depends_on:
      - db
      - redis
    networks:
      - backend-network

  db:
    image: postgres:17-alpine
    container_name: alamin-db
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-alamin_rocks}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend-network

  redis:
    image: redis:8-alpine
    container_name: alamin-redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    networks:
      - backend-network

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: alamin-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/certbot/conf:/etc/letsencrypt:ro
      - ./nginx/certbot/www:/var/www/certbot:ro
    depends_on:
      - backend
    networks:
      - backend-network

  certbot:
    image: certbot/certbot
    container_name: alamin-certbot
    restart: unless-stopped
    volumes:
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

networks:
  backend-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
